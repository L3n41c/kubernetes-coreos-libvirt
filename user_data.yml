#cloud-config

hostname: %NAME%

ssh_authorized_keys:
%SSH_KEYS%

write_files:
  - path: /etc/systemd/journald.conf
    permissions: 0644
    content: |
      [Journal]
      SystemMaxUse=50M
      RuntimeMaxUse=50M

coreos:
  etcd:
    name: %NAME%
    addr: 192.168.10.%N%:4001
    bind-addr: 0.0.0.0
    peer-addr: 192.168.10.%N%:7001
    discovery: %DISCOVERY%
  units:
    - name: static.network
      command: start
      content: |
        [Match]
        # Name=eth0
        MACAddress=52:54:00:00:00:%N%

        [Network]
        Address=192.168.10.%N%/24
        DNS=192.168.10.254
        Gateway=192.168.10.254
    - name: cbr0.netdev
      command: start
      content: |
        [NetDev]
        Kind=bridge
        Name=cbr0
    - name: cbr0.network
      command: start
      content: |
        [Match]
        Name=cbr0

        [Network]
        Address=10.10.%N%.1/24

        [Route]
        Destination=10.0.0.0/8
        Gateway=0.0.0.0
    - name: cbr0-interface.network
      command: start
      content: |
        [Match]
        # Name=eth1
        MACAddress=52:54:00:00:01:%N%

        [Network]
        Bridge=cbr0
    - name: nat.service
      command: start
      content: |
        [Unit]
        Description=NAT non container traffic

        [Service]
        ExecStart=/usr/sbin/iptables -w -t nat -A POSTROUTING -o eth0 -j MASQUERADE ! -d 10.0.0.0/8
        RemainAfterExit=yes
        Type=oneshot
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      content: |
        [Unit]
        After=network.target docker.socket docker-tcp.socket
        Description=Docker Application Container Engine
        Documentation=http://docs.docker.io
        Requires=docker.socket docker-tcp.socket

        [Service]
        Environment="TMPDIR=/var/tmp/"
        LimitNOFILE=1048576
        LimitNPROC=1048576
        ExecStartPre=/bin/mount --make-rprivate /
        ExecStart=/usr/bin/docker --daemon --storage-driver=btrfs --host=fd:// --bridge=cbr0 --iptables=false

        [Install]
        WantedBy=multi-user.target
    - name: docker-tcp.socket
      command: start
      enable: yes
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        BindIPv6Only=both
        Service=docker.service

        [Install]
        WantedBy=sockets.target
    - name: opt-kubernetes.mount
      command: start
      content: |
        [Unit]
        ConditionVirtualization=|vm

        [Mount]
        What=kubernetes
        Where=/opt/kubernetes
        Options=ro,trans=virtio,version=9p2000.L
        Type=9p
%IF MASTER%
    - name: apiserver.service
      command: start
      content: |
        [Unit]
        After=opt-kubernetes.mount
        ConditionFileIsExecutable=/opt/kubernetes/bin/apiserver
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=opt-kubernetes.mount

        [Service]
        ExecStart=/opt/kubernetes/bin/apiserver \
        --address=127.0.0.1 \
        --port=8080 \
        --etcd_servers=http://127.0.0.1:4001 \
        --machines=%MACHINES% \
        --logtostderr=true
        Restart=always
        RestartSec=2

        [Install]
        WantedBy=multi-user.target
    - name: controller-manager.service
      command: start
      content: |
        [Unit]
        After=opt-kubernetes.mount
        ConditionFileIsExecutable=/opt/kubernetes/bin/controller-manager
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=opt-kubernetes.mount

        [Service]
        ExecStart=/opt/kubernetes/bin/controller-manager \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=2

        [Install]
        WantedBy=multi-user.target
%ENDIF MASTER%
    - name: kubelet.service
      command: start
      content: |
        [Unit]
        After=opt-kubernetes.mount
        ConditionFileIsExecutable=/opt/kubernetes/bin/kubelet
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=opt-kubernetes.mount

        [Service]
        ExecStart=/opt/kubernetes/bin/kubelet \
        --address=0.0.0.0 \
        --port=10250 \
        --hostname_override=192.168.10.%N% \
        --etcd_servers=http://127.0.0.1:4001 \
        --logtostderr=true
        Restart=always
        RestartSec=2

        [Install]
        WantedBy=multi-user.target
    - name: proxy.service
      command: start
      content: |
        [Unit]
        After=opt-kubernetes.mount
        ConditionFileIsExecutable=/opt/kubernetes/bin/proxy
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=opt-kubernetes.mount

        [Service]
        ExecStart=/opt/kubernetes/bin/proxy --etcd_servers=http://127.0.0.1:4001 --logtostderr=true
        Restart=always
        RestartSec=2

        [Install]
        WantedBy=multi-user.target
  update:
    group: alpha
    reboot-strategy: off
